#include <WinSock2.h>
#include "Server.h"
#include <exception>
#include <iostream>
#include <string>
#include <thread>
#include <mutex>

void Server::getMessageFromSocket(SOCKET clientSocket, bool finish)
{
	int dataSize = std::atoi(Helper::getStringPartFromSocket(clientSocket, 5).c_str()); // getting size of data
	string data;
	std::unique_lock<std::mutex> lckMessages(_mMessages, defer_lock);


	lckMessages.lock();
	_messagesQueue.push_back(data);
	lckMessages.unlock();

	_cvMessages.notify_all(); // updating all

	lckMessages.lock();
	_messagesQueue.pop_back(); // clearing message
	lckMessages.unlock();
}

void Server::updateMessagesQueue(SOCKET sc, string user)
{
	string message;

	while (true)
	{
		std::unique_lock<std::mutex> lckMessages(_mMessages);
		if (_messagesQueue.empty())
			_cvMessages.wait(lckMessages);
		lckMessages.unlock();

		lckMessages.lock();
		message = _messagesQueue.front();
		Helper::updateFile(PATH, message);
		Helper::sendUpdateMessageToClient(sc, message, Helper::currUser(_clientsList), Helper::nextUser(_clientsList), Helper::getPositionFromClientList(_clientsList, user));
		lckMessages.unlock();
	}
}
